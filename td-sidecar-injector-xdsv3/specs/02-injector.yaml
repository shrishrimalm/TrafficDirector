---
# Source: td-autoinject/templates/poddisruptionbudget.yaml
# yamllint disable
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: istio-sidecar-injector
  namespace: istio-control
  labels:
    app: sidecar-injector
    release: istio-control-istio-autoinject
    istio: sidecar-injector
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: sidecar-injector
      release: istio-control-istio-autoinject
      istio: sidecar-injector

---
# Source: td-autoinject/templates/sidecar-injector-configmap.yaml
# yamllint disable
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-sidecar-injector
  namespace: istio-control
  labels:
    release: istio-control-istio-autoinject
    app: sidecar-injector
    istio: sidecar-injector
data:
  values: |-
    {"clusterResources":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configNamespace":"istio-control","configValidation":"false","controlPlaneSecurityEnabled":true,"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"istio","imagePullPolicy":"Always","imagePullSecrets":[],"istioNamespace":"istio-control","k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logAsJson":false,"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"mtls":{"enabled":false},"multiCluster":{"enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"policyNamespace":"istio-system","priorityClassName":"","prometheusNamespace":"istio-system","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"enabled","clusterDomain":"cluster.local","componentLogLevel":"misc:error","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"envoyAccessLogService":{"enabled":false,"host":null,"port":null},"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","kubevirtInterfaces":"","logLevel":"warning","privileged":false,"protocolDetectionTimeout":"10ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tag":"1.7.0","tracer":"zipkin"},"proxy_init":{"image":"proxyv2","resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"sds":{"enabled":false,"udsPath":""},"tag":"1.5.8","telemetryNamespace":"istio-system","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true,"xdsApiVersion":"v3"},"istio_cni":{"enabled":false},"sidecarInjectorWebhook":{"alwaysInjectSelector":[],"enableAccessLog":false,"enableNamespacesByDefault":false,"image":"sidecar_injector","injectLabel":"istio-injection","neverInjectSelector":[],"nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"replicaCount":2,"rewriteAppHTTPProbe":false,"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","selfSigned":true,"tolerations":[]},"version":""}

  config: |-
    policy: enabled
    alwaysInjectSelector:
      []

    neverInjectSelector:
      []

    template: |
      containers:
      - name: envoy
        image: envoyproxy/envoy:v1.24.0
        imagePullPolicy: Always
        resources:
          limits:
            cpu: "2"
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        env:
        - name: ENVOY_UID
          value: "1337"
        - name: ENVOY_GID
          value: "1337"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1337
          runAsGroup: 1337
        volumeMounts:
        - mountPath: /etc/envoy
          name: envoy-bootstrap
        {{- if eq (annotation .ObjectMeta `cloud.google.com/enableManagedCerts` `false`) `true` }}
        - mountPath: /var/run/secrets/workload-spiffe-credentials
          name: gke-workload-certificates
          readOnly: true
        {{- end }}
      initContainers:
      - name: td-bootstrap-writer
        image: gcr.io/trafficdirector-prod/xds-client-bootstrap-generator:v0.1.0
        imagePullPolicy: Always
        args:
          - --project_number={{.ProxyConfig.ProxyMetadata.TRAFFICDIRECTOR_GCP_PROJECT_NUMBER}}
          - --network_name={{.ProxyConfig.ProxyMetadata.TRAFFICDIRECTOR_NETWORK_NAME}}
          {{- if (isset .ProxyConfig.ProxyMetadata `TRAFFICDIRECTOR_SCOPE_NAME`) }}
          - --scope_name={{.ProxyConfig.ProxyMetadata.TRAFFICDIRECTOR_SCOPE_NAME}}
          {{- end }}
          {{- if (isset .ProxyConfig.ProxyMetadata `TRAFFICDIRECTOR_MESH_NAME`) }}
          - --mesh_name={{.ProxyConfig.ProxyMetadata.TRAFFICDIRECTOR_MESH_NAME}}
          {{- end }}
          - --bootstrap_file_output_path=/var/lib/data/envoy.yaml
          - --traffic_director_url=trafficdirector.googleapis.com:443
          {{- if (isset .ObjectMeta.Annotations `cloud.google.com/includeInboundPorts`) }}
          - --inbound_backend_ports={{ (annotation .ObjectMeta `cloud.google.com/includeInboundPorts` ``) }}
          {{- end }}
          {{- if eq (annotation .ObjectMeta `cloud.google.com/forwardPodLabels` `false`) `true` }}
          - --proxy_metadata={{ toJSON .ObjectMeta.Labels }}
          {{- else if (isset .ObjectMeta.Annotations `cloud.google.com/proxyMetadata`) }}
          - |
              --proxy_metadata={{ (annotation .ObjectMeta `cloud.google.com/proxyMetadata` `{}`) }}
          {{- end }}
          {{- if eq (annotation .ObjectMeta `cloud.google.com/enableManagedCerts` `false`) `true` }}
          - --use_workload_certificates
          {{- end }}
          {{- if isset .ProxyConfig.ProxyMetadata `TRAFFICDIRECTOR_ACCESS_LOG_PATH` }}
          - --access_log_path={{.ProxyConfig.ProxyMetadata.TRAFFICDIRECTOR_ACCESS_LOG_PATH}}
          {{- end }}
          {{- if eq (valueOrDefault .ProxyConfig.ProxyMetadata.TRAFFICDIRECTOR_ENABLE_TRACING "") "true" }}
          - --enable_tracing
          {{- end }}
          - --envoy_admin_port={{.ProxyConfig.ProxyAdminPort}}
          {{- if isset .ProxyConfig.ProxyMetadata `PROXY_STATS_PORT` }}
          - --expose_stats_port={{.ProxyConfig.ProxyMetadata.PROXY_STATS_PORT}}
          {{- end }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1323
          runAsGroup: 1323
        volumeMounts:
          - mountPath: /var/lib/data
            name: envoy-bootstrap
      - name: istio-init
        image: istio/proxyv2:1.12.0
        imagePullPolicy: IfNotPresent
        args:
          - istio-iptables
          - -p
          - "15001"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - "{{ (annotation .ObjectMeta `cloud.google.com/includeOutboundCIDRs` `*`) }}"
          - -b
          - "{{ (annotation .ObjectMeta `cloud.google.com/includeInboundPorts` ``) }}"
          - -x
          - "{{ (annotation .ObjectMeta `cloud.google.com/excludeOutboundCIDRs` `169.254.169.254/32`) }}"
          - -d
          - "{{ (annotation .ObjectMeta `cloud.google.com/excludeInboundPorts` ``) }}"
          - -o
          - "{{ (annotation .ObjectMeta `cloud.google.com/excludeOutboundPorts` ``) }}"
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
      volumes:
        - name: envoy-bootstrap
          emptyDir: {}
        {{- if eq (annotation .ObjectMeta `cloud.google.com/enableManagedCerts` `false`) `true` }}
        - name: gke-workload-certificates
          csi:
            driver: workloadcertificates.security.cloud.google.com
        {{- end }}
    ---



---
# Source: td-autoinject/templates/serviceaccount.yaml
# yamllint disable
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-sidecar-injector-service-account
  namespace: istio-control
  labels:
    app: sidecar-injector
    release: istio-control-istio-autoinject
    istio: sidecar-injector

---
# Source: td-autoinject/templates/clusterrole.yaml
# yamllint disable
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istio-sidecar-injector-istio-control
  labels:
    app: sidecar-injector
    release: istio-control-istio-autoinject
    istio: sidecar-injector
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  resourceNames: ["istio-sidecar-injector"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations"]
  resourceNames: ["istio-sidecar-injector", "istio-sidecar-injector-istio-control"]
  verbs: ["get", "list", "watch", "patch"]

---
# Source: td-autoinject/templates/clusterrolebinding.yaml
# yamllint disable
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-sidecar-injector-admin-role-binding-istio-control
  labels:
    app: sidecar-injector
    release: istio-control-istio-autoinject
    istio: sidecar-injector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-sidecar-injector-istio-control
subjects:
  - kind: ServiceAccount
    name: istio-sidecar-injector-service-account
    namespace: istio-control

---
# Source: td-autoinject/templates/service.yaml
# yamllint disable
apiVersion: v1
kind: Service
metadata:
  name: istio-sidecar-injector
  namespace: istio-control
  labels:
    app: sidecar-injector
    release: istio-control-istio-autoinject
    istio: sidecar-injector
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    istio: sidecar-injector

---
# Source: td-autoinject/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-sidecar-injector
  namespace: istio-control
  labels:
    app: sidecarInjectorWebhook
    release: istio-control-istio-autoinject
    istio: sidecar-injector
spec:
  replicas: 2
  selector:
    matchLabels:
      istio: sidecar-injector
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: sidecarInjectorWebhook
        istio: sidecar-injector
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: istio-sidecar-injector-service-account
      containers:
        - name: sidecar-injector-webhook
          image: "istio/sidecar_injector:1.5.8"
          imagePullPolicy: Always
          args:
            - --caCertFile=/etc/istio/certs/ca-cert.pem
            - --tlsCertFile=/etc/istio/certs/cert.pem
            - --tlsKeyFile=/etc/istio/certs/key.pem
            - --injectConfig=/etc/istio/inject/config
            - --meshConfig=/etc/istio/config/mesh
            - --port=9443
            - --healthCheckInterval=2s
            - --healthCheckFile=/tmp/health
            - --reconcileWebhookConfig=true
            - --webhookConfigName=istio-sidecar-injector-istio-control
            - --log_output_level=debug



          volumeMounts:
          - name: config-volume
            mountPath: /etc/istio/config
            readOnly: true
          - name: certs
            mountPath: /etc/istio/certs
            readOnly: true
          - name: inject-config
            mountPath: /etc/istio/inject
            readOnly: true
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/sidecar-injector
                - probe
                - --probe-path=/tmp/health
                - --interval=4s
            initialDelaySeconds: 4
            periodSeconds: 4
          readinessProbe:
            exec:
              command:
                - /usr/local/bin/sidecar-injector
                - probe
                - --probe-path=/tmp/health
                - --interval=4s
            initialDelaySeconds: 4
            periodSeconds: 4
          resources:
            requests:
              cpu: 10m

      volumes:
      - name: config-volume
        configMap:
          name: injector-mesh
      - name: certs
        secret:
          secretName: istio-sidecar-injector
      - name: inject-config
        configMap:
          name: istio-sidecar-injector
          items:
          - key: config
            path: config
          - key: values
            path: values
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x

---
# Source: td-autoinject/templates/mutatingwebhook.yaml
# yamllint disable
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: istio-sidecar-injector-istio-control
  labels:
    app: sidecar-injector
    release: istio-control-istio-autoinject
webhooks:
  - name: sidecar-injector.istio.io
    sideEffects: None
    admissionReviewVersions: ["v1beta1"]
    clientConfig:
      service:
        name: istio-sidecar-injector
        namespace: istio-control
        path: "/inject"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZmekNDQTJlZ0F3SUJBZ0lSQUo1VkdQSHFYYjJUWjkvQ3FPYVhPbk13RFFZSktvWklodmNOQVFFTEJRQXcKTXpFeE1DOEdBMVVFQXhNb2FYTjBhVzh0YzJsa1pXTmhjaTFwYm1wbFkzUnZjaTVwYzNScGJ5MWpiMjUwY205cwpMbk4yWXpBZUZ3MHlNekF4TURReE5qVXhNVFZhRncweU5EQXhNRFF4TmpVeE1UVmFNRE14TVRBdkJnTlZCQU1UCktHbHpkR2x2TFhOcFpHVmpZWEl0YVc1cVpXTjBiM0l1YVhOMGFXOHRZMjl1ZEhKdmJDNXpkbU13Z2dJaU1BMEcKQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURZUURQRC9JaXZEMTRXdHhKZnB3MUdQRlJ5SWUyRQpBZDRNK2tjQkp2clo4Wm84T3g2MUl6N1FJUjU3cUgzOUE4OHYxRFRHMmRuVGNQTndYOU1OU00wYUoxL01BVGtCCjFLT0FNNHlLQWNCZ2hqZDVkdmRRQ0hZWHpXcXFVOTZqQ0FmazNqMG9xRjM5b2JoVjcycWUwZFIzcW1lN2t0c2MKYkNJUHVyQVQ0N09va3BLVVZnMHZtM0xRaDVEbllvcTJSdVhJUVk2dmNVN3lKZS9BQU1GZ0lTNDRrdStZVUxQTwpyMS94YjF0bmp3S3V2RElOekNwSmJBeTZGbUtZVmdqUDNZT1g5VHVwNzNCSFBVTGkrNHc0bDlTYnBXekF5MnVZCkJBOG05QUs3eFdLUGwzVTdRcU5xcXJYVkFaaEVwOUwyMXVNemdLa29GNmFLcnJqV0l0ZW5oVHB5L0lXWkVWUm4KMVdVc2c4bnB6aWttVkRqczhzYTZ4M0J0bnpTMDVGYVZjK3FZTU1NZXBSaFpRamtPZkI2bE50cE9UN2VFSjQ3YwpQNStzdHVCQmpDYXZWMmt1RFBLTnZETmZURm96TG5ja2hPUDJIOFd2V3lsbTRBNEZKQm1aZVNwUCt3SUF3ZGk4CkVET2pTR1dBUW5PRVdKWnFxTmdBd2htMGhrelRYQ0E5YmdSRHQrbGl4SHlNSk1WbzdhSGNOa3VITTNHMXRram4KRFYwSXM3YlUxNjJWUjNXZWlNQ1VQVW1xUnMzeXNESnByL2tlK0ZTcDNra1hmczlDRUZKejY0cTE0QUhlVzZCVgprSmNqeGFrTVMrVkl6Y2FqZnRFVjRqcHlxTVdLdjV4UTlrOFpJdUFrd1JNOEFhVkRVMDRBWk82L08vVFBiTU5XCkpONzFEVUpGbHEvOU13SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUsKQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRWEV6YVZyOWVZZXNhSwplV0JkaWpRS3hnVnh4akF6QmdOVkhSRUVMREFxZ2locGMzUnBieTF6YVdSbFkyRnlMV2x1YW1WamRHOXlMbWx6CmRHbHZMV052Ym5SeWIyd3VjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFCYmdxalYyelhNR2Erb01pem0KUkJTbFpiL2xBUWJRblpweXlrMms1Z2tOaWIzcngyb2FEZkYrb2VTRmhNR3Y2MGg5enN5bEJXcHdvdVhkWUVyVgpURTF1YktNRnBjeElxb3lxWUZhbnBaZ04xNjdVa09zNThyQVJ6bndMeE5MVXBIejdDeHdpZ2JoOHVVTElrRGlNCmtabWk0SEh1cWhrS2lLTkVKOXB3cDVrYzVxcFBDUjZIWGRCeVVBcGdMZ1AwOHZBYUhwUDNXRkhId09pZUswK2gKS3NCTEM3eWtBM005N1dyOEFrcGlYcnRDVVlSSHpjUGZLellObnBWTGpxdDI4S25NYW9saCt1YlVtWERhcXVDdgpMRXQ5MHRGc3FHejMyQ3VCQW5jc2c4K3JzVEMzMzNBSDdseE1LamxEUTJiS3EwUHF3U1Nta1p6T2IvbjI0RkpiClllaVB5ZVhFaUdOeGlNMU54MThlTVZFZ2R6UDlKVDUyZnhlNzJMaEE5bjh4MnpTZE9oeldaNytkRGh4SEM1UHgKRm10VExpMnFDbkZsYlhtMzZLVFI5WUdNUlBZUENlcUx2T0JReW9maUt0VzlzL1BTUHdveVoyWHZTUjdwQzVtTgpSN1AwTG1xbEgwTnlNa0tUR1hYbnM5a1d5VFZTc1pwMUhRUGwvUzY0UFdLM0drbWRVYVlzTG0rRCtQMWh4SlI3ClQxQit5ZWdUN3F0YVYvTUNHektWZTR2WG94dHR5eEZ4OWp3KzBSVHRCRW9RcVNZYnltdUJPaFNzUXJtS1A0ZkQKRmJTbjRPeElxZ3FkKzltWkVLa1Vaazhpb1pYeW1jMFdYeUJnTi9RWnJUSi8zdWVtZ3VsM1dTUlVrakZlQndQRQpuSDNhNHJIZCtLcmRZZlhpWFdGZWx0b2lFQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    rules:
      - operations: [ "CREATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    failurePolicy: Fail
    namespaceSelector:
      matchLabels:
        istio-injection: enabled
---

